import pytest
import sys
import os
path = os.path.join(os.path.normpath(os.getcwd() + os.sep + os.pardir), 'Arxiv')
sys.path.insert(0, path)
from Arxiv.Arxiv import Arxiv

def search_query(categories_filter=True, authors_filter=True, key_phrases_filter=False):
    """
    Function for generating search query for arxiv. The actual categories, authors and key phrases 
    to filter by are stored in external text files. 

    Currently the search is generated by taking all authors, key phrases and categories and combining
    into a single string by repeated logical ORs.

    Parameters:
    -----------
    categories_filter: Bool, optional
        Whether to filter by categories.

    author_filter: Bool, optional
        Whether to filter by authors.

    key_phrases_filter: Bool, optional
        Whether to filter using key words.

    Returns:
    --------
    search_query: string
        Arxiv API compatible search query string.
    """

    categories = ""
    key_phrases = ""
    authors = ""

    if categories_filter:
        categories_path = os.path.normpath(os.getcwd() + os.sep + os.pardir)
        categories_path = os.path.join(categories_path, 'Arxiv', 'query_information', 'categories.txt')

        with open(categories_path, 'r') as f:
            categories = f.read().splitlines()
        categories = '(cat:' + ' OR cat:'.join(categories) + ')'

    if authors_filter:
        authors_path = os.path.normpath(os.getcwd() + os.sep + os.pardir)
        authors_path = os.path.join(authors_path, 'Arxiv','query_information', 'authors.txt')

        with open(authors_path, 'r') as f:
            authors = f.read().splitlines()
        authors = '(au:' + ' OR au:'.join(authors) + ')'

    if key_phrases_filter:
        key_phrases_path = os.path.normpath(os.getcwd() + os.sep + os.pardir)
        key_phrases_path = os.path.join(key_phrases_path, 'Arxiv','query_information', 'key_phrases.txt')

        with open(key_phrases_path, 'r') as f:
            key_phrases = f.read().splitlines()
        key_phrases = '(au:' + ' OR au:'.join(key_phrases) + ')'

    search_query_string = authors + " OR " + categories 

    return search_query_string

Arxiv = Arxiv(number_of_repeats=2, max_results=5)

# Test search_query_string
def test_search_query():
	search_query_string = search_query()
	assert len(search_query_string) > 0

def test_generate_papers():
	Arxiv._generate_papers()
	assert len(Arxiv.queried_papers_unfiltered) > 0

def test_arxiv_papers():
	Arxiv.arxiv_papers(store_papers=False)
	assert (len(Arxiv.fav_papers))